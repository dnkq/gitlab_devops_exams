variables:
  KUBE_NAMESPACE_dev: dev
  KUBE_NAMESPACE_staging: staging
  KUBE_NAMESPACE_prod: prod
  IP_DEV: 54.194.121.146
  IP_STAGING: 54.194.121.146
  IP_PROD: 54.194.121.146
  NODEPORT_DEV: 30000
  NODEPORT_STAGING: 30001
  NODEPORT_PROD: 30002
  KUBECONFIG: /root/.kube/config

image:
  name: "python:3.11-alpine"
  entrypoint: ["/bin/sh", "-c"]

stages:
  - test
  - build
  - run
  #- push
  - deploy_dev
  - deploy_staging
  - deploy_prod

test:
  stage: test
  image: python:3.10-slim
  script:
    - apt-get update && apt-get install -y build-essential python3-dev
    - pip install -r users/requirements.txt
    - pip install fastapi
    - pip install pytest
    - pip install httpx requests
    - cd users
    - python3 -m pytest

build_and_push:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
  script:
    - docker build -t dnkq/users:$CI_COMMIT_SHORT_SHA ./users
    - docker build -t dnkq/orders:$CI_COMMIT_SHORT_SHA ./orders
    - docker build -t dnkq/gateway:$CI_COMMIT_SHORT_SHA ./gateway
    - docker push dnkq/users:$CI_COMMIT_SHORT_SHA
    - docker push dnkq/orders:$CI_COMMIT_SHORT_SHA
    - docker push dnkq/gateway:$CI_COMMIT_SHORT_SHA
    # If we are building a tag, push the `latest` container image tag too
    - if [ ! -z "$CI_COMMIT_TAG" ]; then
        docker tag dnkq/users:$CI_COMMIT_SHORT_SHA dnkq/users:latest;
        docker tag dnkq/orders:$CI_COMMIT_SHORT_SHA dnkq/orders:latest;
        docker tag dnkq/gateway:$CI_COMMIT_SHORT_SHA dnkq/gateway:latest;
        docker push dnkq/users:latest;
        docker push dnkq/orders:latest;
        docker push dnkq/gateway:latest;
      fi

run:
  stage: run
  image: docker:latest
  services:
    - docker:dind
  script:
    #installer curl dans le runner
    - apk add --no-cache curl
    - docker run -d -p 8000:8000 --name users dnkq/users:latest
    - sleep 10
    - docker exec users curl http://localhost:8000/docs
    - docker stop users
    - docker rm users

#push:
  #stage: push
  #image: docker:latest
  #services:
  # - docker:dind
  #dependencies:
  #  - build
  #before_script:
  #  - docker info
  #  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
  #script:
  #  - docker push dnkq/users:$CI_COMMIT_SHORT_SHA
  #  - docker push dnkq/users:latest
  #  - docker push dnkq/orders:$CI_COMMIT_SHORT_SHA
  #  - docker push dnkq/orders:latest
  #  - docker push dnkq/gateway:$CI_COMMIT_SHORT_SHA
  #  - docker push dnkq/gateway:latest

stop_dev:
  stage: deploy_dev
  variables:
    NAMESPACE: dev
  when: manual
  environment:
    name: dev-$CI_BUILD_REF_NAME
    action: stop
  script:
    - helm uninstall app -n $NAMESPACE

stop_staging:
  stage: deploy_staging
  variables:
    NAMESPACE: staging
  when: manual
  environment:
    name: staging-$CI_BUILD_REF_NAME
    action: stop
  script:
    - helm uninstall app -n $NAMESPACE

stop_prod:
  stage: deploy_prod
  variables:
    NAMESPACE: prod
  when: manual
  environment:
    name: prod
    action: stop
  script:
    - helm uninstall app -n $NAMESPACE

deploy_dev:
  stage: deploy_dev
  image:
    name: dtzar/helm-kubectl:3.18.6
    entrypoint: ["/bin/sh", "-c"]
  services:
    - docker:dind
  environment:
    name: dev-$CI_BUILD_REF_NAME
    url: http://$IP_DEV:$NODEPORT_DEV
    on_stop: stop_dev
  variables:
    NAMESPACE: dev
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBE_CONFIG" > ~/.kube/config
    - chmod 600 ~/.kube/config
    - export KUBECONFIG=~/.kube/config
    - kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE
  script:
    - helm upgrade --install users ./helm/users --values=helm/users/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/users" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_DEV"
    - helm upgrade --install orders ./helm/orders --values=helm/orders/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/orders" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_DEV"
    - helm upgrade --install gateway ./helm/gateway --values=helm/gateway/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/gateway" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_DEV"

deploy_staging:
  stage: deploy_staging
  image:
    name: dtzar/helm-kubectl:3.18.6
    entrypoint: ["/bin/sh", "-c"]
  services:
    - docker:dind
  environment:
    name: staging-$CI_BUILD_REF_NAME
    url: http://$IP_STAGING:$NODEPORT_STAGING
    on_stop: stop_staging
  variables:
    NAMESPACE: staging
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBE_CONFIG" > ~/.kube/config
    - chmod 600 ~/.kube/config
    - export KUBECONFIG=~/.kube/config
    - kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE
  script:
    - helm upgrade --install users ./helm/users --values=helm/users/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/users" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_STAGING"
    - helm upgrade --install orders ./helm/orders --values=helm/orders/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/orders" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_STAGING"
    - helm upgrade --install gateway ./helm/gateway --values=helm/gateway/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/gateway" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_STAGING"

deploy_prod:
  stage: deploy_prod
  image:
    name: dtzar/helm-kubectl:3.18.6
    entrypoint: ["/bin/sh", "-c"]
  services:
    - docker:dind
  when: manual
  environment:
    name: prod
    url: http://$IP_PROD:$NODEPORT_PROD
  variables:
    NAMESPACE: prod
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBE_CONFIG" > ~/.kube/config
    - chmod 600 ~/.kube/config
    - export KUBECONFIG=~/.kube/config
    - kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE
  script:
    - helm upgrade --install users ./helm/users --values=helm/users/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/users" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_PROD"
    - helm upgrade --install orders ./helm/orders --values=helm/orders/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/orders" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_PROD"
    - helm upgrade --install gateway ./helm/gateway --values=helm/gateway/values.yaml --namespace $NAMESPACE --set image.repository="dnkq/gateway" --set image.tag="$CI_COMMIT_SHORT_SHA" --set service.nodeport="$NODEPORT_PROD"
